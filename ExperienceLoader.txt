local configUrl = "https://raw.githubusercontent.com/ARandomDumDev/ExperienceGui/refs/heads/main/config.json"
local scriptUrl = "https://raw.githubusercontent.com/ARandomDumDev/ExperienceGui/refs/heads/main/ExperienceGuiMAIN.txt"

local HttpService = game:GetService("HttpService")

local currentGui
local currentVersion

local function loadGui()
    local source = game:HttpGet(scriptUrl)
    local fn = loadstring(source)
    currentGui = fn()  -- returns Window
end

local function unloadGui()
    if currentGui and currentGui.Destroy then
        currentGui:Destroy()  -- Rayfield windows can be destroyed
    end
    currentGui = nil
end

-- Initial load
loadGui()

-- Poll config.json
task.spawn(function()
    while task.wait(10) do
        local ok, result = pcall(function()
            return game:HttpGet(configUrl)
        end)
        if ok then
            local cfg = HttpService:JSONDecode(result)
            if cfg.maintenance then
                unloadGui()
                -- Show maintenance message
                local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
                local win = Rayfield:CreateWindow({
                    Name = "ExperienceGui - Maintenance",
                    LoadingTitle = "Maintenance",
                    LoadingSubtitle = "Please wait...",
                })
                win:CreateTab("Notice", 4483362458):CreateLabel(cfg.message or "Down for maintenance.")
            elseif cfg.version and cfg.version ~= currentVersion then
                unloadGui()
                loadGui()
                currentVersion = cfg.version
            end
        end
    end
end)
