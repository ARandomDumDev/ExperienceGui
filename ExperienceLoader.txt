--// ExperienceGui Loader 0.02

local configUrl = "https://raw.githubusercontent.com/ARandomDumDev/ExperienceGui/refs/heads/main/config.json"
local scriptUrl = "https://raw.githubusercontent.com/ARandomDumDev/ExperienceGui/refs/heads/main/ExperienceGuiMAIN.txt"

local HttpService = game:GetService("HttpService")

local currentGui
local currentMode -- "main" or "maintenance"
local currentVersion

-- Destroy current window if exists
local function unloadGui()
    if currentGui and currentGui.Destroy then
        pcall(function() currentGui:Destroy() end)
    end
    currentGui = nil
end

-- Load main gui
local function loadMain()
    unloadGui()
    local ok, src = pcall(function()
        return game:HttpGet(scriptUrl)
    end)
    if ok then
        local fn = loadstring(src)
        currentGui = fn() -- must return the Rayfield window
        currentMode = "main"
    else
        warn("Failed to load main GUI:", src)
    end
end

-- Load maintenance gui
local function loadMaintenance(message)
    unloadGui()
    local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
    local win = Rayfield:CreateWindow({
        Name = "ExperienceGui - Maintenance",
        LoadingTitle = "Maintenance",
        LoadingSubtitle = "Please wait...",
    })
    local tab = win:CreateTab("Notice", 4483362458)
    tab:CreateLabel(message or "Down for maintenance.")
    currentGui = win
    currentMode = "maintenance"
end

-- Show preloader right away
loadMaintenance("⏳ Loading… Please don’t spam, I know you will spam.")

-- Poll config.json
task.spawn(function()
    while task.wait(10) do
        local ok, result = pcall(function()
            return game:HttpGet(configUrl)
        end)
        if not ok then
            warn("Config fetch failed:", result)
            continue
        end

        local cfg
        local decodeOk, decodeRes = pcall(function()
            return HttpService:JSONDecode(result)
        end)
        if not decodeOk then
            warn("Config decode failed:", decodeRes)
            continue
        end
        cfg = decodeRes

        if cfg.maintenance then
            if currentMode ~= "maintenance" then
                loadMaintenance(cfg.message)
            end
        elseif cfg.version and cfg.version ~= currentVersion then
            currentVersion = cfg.version
            loadMain()
        elseif not currentGui then
            -- No GUI open yet, load main
            loadMain()
        end
    end
end)
