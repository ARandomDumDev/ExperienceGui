-- ExperienceGui LocalScript (Fixed Syntax/Runtime Issues)
-- Place this as a LocalScript in StarterPlayerScripts or use an executor

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Helper function to scale UDim2
local function scaleUDim2(size, scaleFactor)
    return UDim2.new(
        size.X.Scale * scaleFactor,
        size.X.Offset * scaleFactor,
        size.Y.Scale * scaleFactor,
        size.Y.Offset * scaleFactor
    )
end

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ExperienceGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main Frame (Modern dark theme with shadow)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 0, 0, 0)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.ClipsDescendants = true

-- Shadow for mainFrame (using UIStroke for glow effect)
local shadow = Instance.new("UIStroke")
shadow.Thickness = 2
shadow.Color = Color3.fromRGB(0, 0, 0)
shadow.Transparency = 0.7
shadow.Parent = mainFrame

-- Rounded corners
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 16)
mainCorner.Parent = mainFrame

-- Gradient for mainFrame
local mainGradient = Instance.new("UIGradient")
mainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
}
mainGradient.Rotation = 45
mainGradient.Parent = mainFrame

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Text = "Ã—"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = mainFrame

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 15)
closeCorner.Parent = closeButton

-- Password Frame
local passwordFrame = Instance.new("Frame")
passwordFrame.Name = "PasswordFrame"
passwordFrame.Size = UDim2.new(1, 0, 1, 0)
passwordFrame.BackgroundTransparency = 1
passwordFrame.Parent = mainFrame

-- Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, 0, 0, 60)
titleLabel.Position = UDim2.new(0, 0, 0, 40)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Enter Password to Unlock"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = passwordFrame

-- Password TextBox
local passwordBox = Instance.new("TextBox")
passwordBox.Name = "PasswordBox"
passwordBox.Size = UDim2.new(0.8, 0, 0, 50)
passwordBox.Position = UDim2.new(0.1, 0, 0, 120)
passwordBox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
passwordBox.BorderSizePixel = 0
passwordBox.Text = ""
passwordBox.PlaceholderText = "Password..."
passwordBox.TextColor3 = Color3.fromRGB(255, 255, 255)
passwordBox.TextScaled = true
passwordBox.Font = Enum.Font.Gotham
passwordBox.Parent = passwordFrame

local passwordCorner = Instance.new("UICorner")
passwordCorner.CornerRadius = UDim.new(0, 10)
passwordCorner.Parent = passwordBox

local passwordStroke = Instance.new("UIStroke")
passwordStroke.Thickness = 1
passwordStroke.Color = Color3.fromRGB(100, 100, 120)
passwordStroke.Parent = passwordBox

-- Unlock Button
local unlockButton = Instance.new("TextButton")
unlockButton.Name = "UnlockButton"
unlockButton.Size = UDim2.new(0.8, 0, 0, 50)
unlockButton.Position = UDim2.new(0.1, 0, 0, 200)
unlockButton.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
unlockButton.BorderSizePixel = 0
unlockButton.Text = "Unlock"
unlockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
unlockButton.TextScaled = true
unlockButton.Font = Enum.Font.GothamBold
unlockButton.Parent = passwordFrame

local unlockCorner = Instance.new("UICorner")
unlockCorner.CornerRadius = UDim.new(0, 10)
unlockCorner.Parent = unlockButton

local unlockStroke = Instance.new("UIStroke")
unlockStroke.Thickness = 1
unlockStroke.Color = Color3.fromRGB(0, 120, 200)
unlockStroke.Parent = unlockButton

-- Button hover/click animations (fixed with original size reference)
local function animateButton(button, hoverColor, clickScale)
    local originalSize = button.Size
    local originalColor = button.BackgroundColor3
    
    local hoverTween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor})
    
    button.MouseEnter:Connect(function()
        hoverTween:Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalColor}):Play()
    end)
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {Size = scaleUDim2(originalSize, clickScale)}):Play()
    end)
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {Size = originalSize}):Play()
    end)
end

animateButton(unlockButton, Color3.fromRGB(0, 120, 200), 0.95)
animateButton(closeButton, Color3.fromRGB(200, 50, 50), 0.95)

-- Tabs Frame
local tabsFrame = Instance.new("Frame")
tabsFrame.Name = "TabsFrame"
tabsFrame.Size = UDim2.new(1, 0, 1, 0)
tabsFrame.Position = UDim2.new(0, 0, 0, 0)
tabsFrame.BackgroundTransparency = 1
tabsFrame.Parent = mainFrame
tabsFrame.Visible = false

-- Tab Buttons Frame
local tabButtons = Instance.new("Frame")
tabButtons.Name = "TabButtons"
tabButtons.Size = UDim2.new(1, 0, 0, 50)
tabButtons.Position = UDim2.new(0, 0, 0, 0)
tabButtons.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
tabButtons.BorderSizePixel = 0
tabButtons.Parent = tabsFrame

local tabCorner = Instance.new("UICorner")
tabCorner.CornerRadius = UDim.new(0, 0)
tabCorner.Parent = tabButtons

local tabStroke = Instance.new("UIStroke")
tabStroke.Thickness = 1
tabStroke.Color = Color3.fromRGB(50, 50, 60)
tabStroke.Parent = tabButtons

-- Tab buttons
local tabs = {"Console", "Basic Needs", "Info"}
local tabButtonsList = {}

for i, tabName in ipairs(tabs) do
    local tabBtn = Instance.new("TextButton")
    tabBtn.Name = tabName .. "Tab"
    tabBtn.Size = UDim2.new(1 / #tabs, 0, 1, 0)
    tabBtn.Position = UDim2.new((i-1) / #tabs, 0, 0, 0)
    tabBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
    tabBtn.BorderSizePixel = 0
    tabBtn.Text = tabName
    tabBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
    tabBtn.TextScaled = true
    tabBtn.Font = Enum.Font.GothamSemibold
    tabBtn.Parent = tabButtons
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 10)
    btnCorner.Parent = tabBtn
    
    local btnStroke = Instance.new("UIStroke")
    btnStroke.Thickness = 1
    btnStroke.Color = Color3.fromRGB(60, 60, 70)
    btnStroke.Parent = tabBtn
    
    tabButtonsList[tabName] = tabBtn
    
    animateButton(tabBtn, Color3.fromRGB(55, 55, 65), 0.98)
end

-- Content Frame with Scrolling
local contentFrame = Instance.new("ScrollingFrame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, 0, 1, -50)
contentFrame.Position = UDim2.new(0, 0, 0, 50)
contentFrame.BackgroundTransparency = 1
contentFrame.BorderSizePixel = 0
contentFrame.ScrollBarThickness = 6
contentFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 120)
contentFrame.Parent = tabsFrame
contentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)  -- Will auto-update

local contentLayout = Instance.new("UIListLayout")
contentLayout.FillDirection = Enum.FillDirection.Vertical
contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
contentLayout.Padding = UDim.new(0, 0)
contentLayout.Parent = contentFrame

-- Individual tab contents (full size initially)
local tabContents = {}

-- Console Tab
local consoleContent = Instance.new("Frame")
consoleContent.Name = "ConsoleContent"
consoleContent.Size = UDim2.new(1, 0, 1, 0)
consoleContent.BackgroundTransparency = 1
consoleContent.LayoutOrder = 1
consoleContent.Parent = contentFrame
consoleContent.Visible = false

tabContents["Console"] = consoleContent

-- Console Output ScrollingFrame
local outputFrame = Instance.new("ScrollingFrame")
outputFrame.Name = "OutputFrame"
outputFrame.Size = UDim2.new(1, -20, 1, -80)
outputFrame.Position = UDim2.new(0, 10, 0, 10)
outputFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
outputFrame.BorderSizePixel = 0
outputFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
outputFrame.ScrollBarThickness = 4
outputFrame.Parent = consoleContent

local outputCorner = Instance.new("UICorner")
outputCorner.CornerRadius = UDim.new(0, 8)
outputCorner.Parent = outputFrame

local outputLayout = Instance.new("UIListLayout")
outputLayout.SortOrder = Enum.SortOrder.LayoutOrder
outputLayout.Padding = UDim.new(0, 2)
outputLayout.Parent = outputFrame

outputLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    outputFrame.CanvasSize = UDim2.new(0, 0, 0, outputLayout.AbsoluteContentSize.Y)
end)

-- Console Input
local inputFrame = Instance.new("Frame")
inputFrame.Name = "InputFrame"
inputFrame.Size = UDim2.new(1, -20, 0, 60)
inputFrame.Position = UDim2.new(0, 10, 1, -70)
inputFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
inputFrame.BorderSizePixel = 0
inputFrame.Parent = consoleContent

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 8)
inputCorner.Parent = inputFrame

local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(1, -80, 1, 0)
inputBox.Position = UDim2.new(0, 10, 0, 0)
inputBox.BackgroundTransparency = 1
inputBox.Text = ""
inputBox.PlaceholderText = "Enter Lua code..."
inputBox.TextColor3 = Color3.fromRGB(200, 200, 255)
inputBox.TextScaled = true
inputBox.Font = Enum.Font.Code
inputBox.MultiLine = true
inputBox.TextYAlignment = Enum.TextYAlignment.Top
inputBox.Parent = inputFrame

local execButton = Instance.new("TextButton")
execButton.Size = UDim2.new(0, 60, 1, 0)
execButton.Position = UDim2.new(1, -70, 0, 0)
execButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
execButton.BorderSizePixel = 0
execButton.Text = "Exec"
execButton.TextColor3 = Color3.fromRGB(255, 255, 255)
execButton.TextScaled = true
execButton.Font = Enum.Font.GothamBold
execButton.Parent = inputFrame

local execCorner = Instance.new("UICorner")
execCorner.CornerRadius = UDim.new(0, 8)
execCorner.Parent = execButton

animateButton(execButton, Color3.fromRGB(0, 120, 0), 0.95)

-- Function to add console output
local function addOutput(text, color)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, math.max(20, #text / 50 * 14))  -- Dynamic height
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = color or Color3.fromRGB(255, 255, 255)
    label.TextScaled = false
    label.TextSize = 14
    label.Font = Enum.Font.Code
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextWrapped = true
    label.Parent = outputFrame
    
    outputFrame.CanvasPosition = Vector2.new(0, outputFrame.CanvasSize.Y.Offset)
end

-- Exec functionality (with pcall error handling)
execButton.MouseButton1Click:Connect(function()
    local code = inputBox.Text
    if code == "" then return end
    
    addOutput("> " .. code, Color3.fromRGB(150, 255, 150))
    inputBox.Text = ""
    
    local success, result = pcall(loadstring(code))
    if success then
        addOutput("Success", Color3.fromRGB(0, 255, 0))
    else
        addOutput("Error: " .. tostring(result), Color3.fromRGB(255, 100, 100))
    end
end)

inputBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        execButton.MouseButton1Click:Fire()
    end
end)

-- Basic Needs Tab
local basicContent = Instance.new("Frame")
basicContent.Name = "BasicContent"
basicContent.Size = UDim2.new(1, 0, 1, 0)
basicContent.BackgroundTransparency = 1
basicContent.LayoutOrder = 2
basicContent.Parent = contentFrame
basicContent.Visible = false

tabContents["Basic Needs"] = basicContent

local basicLayout = Instance.new("UIListLayout")
basicLayout.FillDirection = Enum.FillDirection.Vertical
basicLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
basicLayout.Padding = UDim.new(0, 10)
basicLayout.Parent = basicContent

-- Fly Toggle
local flyButton = Instance.new("TextButton")
flyButton.Name = "FlyButton"
flyButton.Size = UDim2.new(0.8, 0, 0, 50)
flyButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
flyButton.BorderSizePixel = 0
flyButton.Text = "Fly: OFF"
flyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
flyButton.TextScaled = true
flyButton.Font = Enum.Font.GothamBold
flyButton.Parent = basicContent

local flyCorner = Instance.new("UICorner")
flyCorner.CornerRadius = UDim.new(0, 10)
flyCorner.Parent = flyButton

local flyStroke = Instance.new("UIStroke")
flyStroke.Thickness = 1
flyStroke.Color = Color3.fromRGB(200, 50, 50)
flyStroke.Parent = flyButton

animateButton(flyButton, Color3.fromRGB(200, 50, 50), 0.95)

local flying = false
local flyConnection = nil
local flySpeed = 50

local function updateFly(enable)
    local character = player.Character
    if not character then return end
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    -- Clean up old
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
    if rootPart:FindFirstChild("FlyBodyVelocity") then
        rootPart.FlyBodyVelocity:Destroy()
    end
    if rootPart:FindFirstChild("FlyBodyAngularVelocity") then
        rootPart.FlyBodyAngularVelocity:Destroy()
    end
    
    if enable then
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Name = "FlyBodyVelocity"
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = rootPart
        
        local bodyAngular = Instance.new("BodyAngularVelocity")
        bodyAngular.Name = "FlyBodyAngularVelocity"
        bodyAngular.MaxTorque = Vector3.new(4000, 4000, 4000)
        bodyAngular.AngularVelocity = Vector3.new(0, 0, 0)
        bodyAngular.Parent = rootPart
        
        flyConnection = RunService.Heartbeat:Connect(function()
            if not flying or not character or not rootPart or not rootPart.Parent then return end
            
            local camera = workspace.CurrentCamera
            local velocity = Vector3.new(0, 0, 0)
            
            local look = camera.CFrame.LookVector
            local right = camera.CFrame.RightVector
            
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then velocity = velocity + look end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then velocity = velocity - look end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then velocity = velocity - right end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then velocity = velocity + right end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then velocity = velocity + Vector3.new(0, 1, 0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then velocity = velocity + Vector3.new(0, -1, 0) end
            
            bodyVelocity.Velocity = velocity.Unit * flySpeed
        end)
    end
end

local function toggleFly()
    flying = not flying
    flyButton.Text = "Fly: " .. (flying and "ON" or "OFF")
    flyButton.BackgroundColor3 = flying and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
    flyStroke.Color = flying and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(200, 50, 50)
    updateFly(flying)
end

flyButton.MouseButton1Click:Connect(toggleFly)

player.CharacterAdded:Connect(function()
    if flying then
        task.wait(1)
        updateFly(true)
    end
end)

-- Speed Input
local speedFrame = Instance.new("Frame")
speedFrame.Size = UDim2.new(0.8, 0, 0, 60)
speedFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
speedFrame.BorderSizePixel = 0
speedFrame.Parent = basicContent

local speedCorner = Instance.new("UICorner")
speedCorner.CornerRadius = UDim.new(0, 10)
speedCorner.Parent = speedFrame

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, 0, 0.5, 0)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Walk Speed: 16"
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.TextScaled = true
speedLabel.Font = Enum.Font.Gotham
speedLabel.Parent = speedFrame

local speedInput = Instance.new("TextBox")
speedInput.Size = UDim2.new(1, 0, 0.5, 0)
speedInput.Position = UDim2.new(0, 0, 0.5, 0)
speedInput.BackgroundTransparency = 1
speedInput.Text = "16"
speedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
speedInput.TextScaled = true
speedInput.Font = Enum.Font.Gotham
speedInput.Parent = speedFrame

speedInput.FocusLost:Connect(function()
    local speed = math.clamp(tonumber(speedInput.Text) or 16, 0, 500)
    speedInput.Text = tostring(speed)
    speedLabel.Text = "Walk Speed: " .. speed
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    if humanoid then humanoid.WalkSpeed = speed end
end)

-- Jump Power Input
local jumpFrame = Instance.new("Frame")
jumpFrame.Size = UDim2.new(0.8, 0, 0, 60)
jumpFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
jumpFrame.BorderSizePixel = 0
jumpFrame.Parent = basicContent

local jumpCorner = Instance.new("UICorner")
jumpCorner.CornerRadius = UDim.new(0, 10)
jumpCorner.Parent = jumpFrame

local jumpLabel = Instance.new("TextLabel")
jumpLabel.Size = UDim2.new(1, 0, 0.5, 0)
jumpLabel.BackgroundTransparency = 1
jumpLabel.Text = "Jump Power: 50"
jumpLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
jumpLabel.TextScaled = true
jumpLabel.Font = Enum.Font.Gotham
jumpLabel.Parent = jumpFrame

local jumpInput = Instance.new("TextBox")
jumpInput.Size = UDim2.new(1, 0, 0.5, 0)
jumpInput.Position = UDim2.new(0, 0, 0.5, 0)
jumpInput.BackgroundTransparency = 1
jumpInput.Text = "50"
jumpInput.TextColor3 = Color3.fromRGB(255, 255, 255)
jumpInput.TextScaled = true
jumpInput.Font = Enum.Font.Gotham
jumpInput.Parent = jumpFrame

jumpInput.FocusLost:Connect(function()
    local jumpP = math.clamp(tonumber(jumpInput.Text) or 50, 0, 500)
    jumpInput.Text = tostring(jumpP)
    jumpLabel.Text = "Jump Power: " .. jumpP
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    if humanoid then humanoid.JumpPower = jumpP end
end)

-- Noclip Toggle
local noclipButton = Instance.new("TextButton")
noclipButton.Name = "NoclipButton"
noclipButton.Size = UDim2.new(0.8, 0, 0, 50)
noclipButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
noclipButton.BorderSizePixel = 0
noclipButton.Text = "Noclip: OFF"
noclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
noclipButton.TextScaled = true
noclipButton.Font = Enum.Font.GothamBold
noclipButton.Parent = basicContent

local noclipCorner = Instance.new("UICorner")
noclipCorner.CornerRadius = UDim.new(0, 10)
noclipCorner.Parent = noclipButton

local noclipStroke = Instance.new("UIStroke")
noclipStroke.Thickness = 1
noclipStroke.Color = Color3.fromRGB(200, 50, 50)
noclipStroke.Parent = noclipButton

local noclipping = false
local noclipConnection = nil

noclipButton.MouseButton1Click:Connect(function()
    noclipping = not noclipping
    noclipButton.Text = "Noclip: " .. (noclipping and "ON" or "OFF")
    noclipButton.BackgroundColor3 = noclipping and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
    noclipStroke.Color = noclipping and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(200, 50, 50)
    
    if noclipping then
        noclipConnection = RunService.Stepped:Connect(function()
            local char = player.Character
            if char then
                for _, part in ipairs(char:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        local char = player.Character
        if char then
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end)

-- Infinite Jump Toggle
local infJumpButton = Instance.new("TextButton")
infJumpButton.Name = "InfJumpButton"
infJumpButton.Size = UDim2.new(0.8, 0, 0, 50)
infJumpButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
infJumpButton.BorderSizePixel = 0
infJumpButton.Text = "Infinite Jump: OFF"
infJumpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
infJumpButton.TextScaled = true
infJumpButton.Font = Enum.Font.GothamBold
infJumpButton.Parent = basicContent

local infJumpCorner = Instance.new("UICorner")
infJumpCorner.CornerRadius = UDim.new(0, 10)
infJumpCorner.Parent = infJumpButton

animateButton(infJumpButton, Color3.fromRGB(200, 50, 50), 0.95)

local infJumping = false
local infJumpConnection = nil

infJumpButton.MouseButton1Click:Connect(function()
    infJumping = not infJumping
    infJumpButton.Text = "Infinite Jump: " .. (infJumping and "ON" or "OFF")
    infJumpButton.BackgroundColor3 = infJumping and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
    
    if infJumping then
        infJumpConnection = UserInputService.JumpRequest:Connect(function()
            local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    else
        if infJumpConnection then
            infJumpConnection:Disconnect()
            infJumpConnection = nil
        end
    end
end)

-- God Mode Toggle
local godButton = Instance.new("TextButton")
godButton.Name = "GodButton"
godButton.Size = UDim2.new(0.8, 0, 0, 50)
godButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
godButton.BorderSizePixel = 0
godButton.Text = "God Mode: OFF"
godButton.TextColor3 = Color3.fromRGB(255, 255, 255)
godButton.TextScaled = true
godButton.Font = Enum.Font.GothamBold
godButton.Parent = basicContent

local godCorner = Instance.new("UICorner")
godCorner.CornerRadius = UDim.new(0, 10)
godCorner.Parent = godButton

animateButton(godButton, Color3.fromRGB(200, 50, 50), 0.95)

local godMode = false
local godConnection = nil

godButton.MouseButton1Click:Connect(function()
    godMode = not godMode
    godButton.Text = "God Mode: " .. (godMode and "ON" or "OFF")
    godButton.BackgroundColor3 = godMode and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
    
    if godMode then
        godConnection = RunService.Heartbeat:Connect(function()
            local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health < humanoid.MaxHealth then
                humanoid.Health = humanoid.MaxHealth
            end
        end)
    else
        if godConnection then
            godConnection:Disconnect()
            godConnection = nil
        end
    end
end)

-- Info Tab
local infoContent = Instance.new("Frame")
infoContent.Name = "InfoContent"
infoContent.Size = UDim2.new(1, 0, 1, 0)
infoContent.BackgroundTransparency = 1
infoContent.LayoutOrder = 3
infoContent.Parent = contentFrame
infoContent.Visible = false

tabContents["Info"] = infoContent

local infoLayout = Instance.new("UIListLayout")
infoLayout.FillDirection = Enum.FillDirection.Vertical
infoLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
infoLayout.Padding = UDim.new(0, 10)
infoLayout.Parent = infoContent

-- Player Info Labels
local playerNameLabel = Instance.new("TextLabel")
playerNameLabel.Size = UDim2.new(0.8, 0, 0, 40)
playerNameLabel.BackgroundTransparency = 1
playerNameLabel.Text = "Player Name: " .. player.Name
playerNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
playerNameLabel.TextScaled = true
playerNameLabel.Font = Enum.Font.Gotham
playerNameLabel.Parent = infoContent

local userIdLabel = Instance.new("TextLabel")
userIdLabel.Size = UDim2.new(0.8, 0, 0, 40)
userIdLabel.BackgroundTransparency = 1
userIdLabel.Text = "User ID: " .. player.UserId
userIdLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
userIdLabel.TextScaled = true
userIdLabel.Font = Enum.Font.Gotham
userIdLabel.Parent = infoContent

local displayNameLabel = Instance.new("TextLabel")
displayNameLabel.Size = UDim2.new(0.8, 0, 0, 40)
displayNameLabel.BackgroundTransparency = 1
displayNameLabel.Text = "Display Name: " .. (player.DisplayName or "N/A")
displayNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
displayNameLabel.TextScaled = true
displayNameLabel.Font = Enum.Font.Gotham
displayNameLabel.Parent = infoContent

-- FPS Label
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Size = UDim2.new(0.8, 0, 0, 40)
fpsLabel.BackgroundTransparency = 1
fpsLabel.Text = "FPS: Calculating..."
fpsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
fpsLabel.TextScaled = true
fpsLabel.Font = Enum.Font.Gotham
fpsLabel.Parent = infoContent

local lastTime = tick()
local frameCount = 0
RunService.Heartbeat:Connect(function()
    frameCount = frameCount + 1
    if tick() - lastTime >= 1 then
        fpsLabel.Text = "FPS: " .. math.floor(frameCount)
        frameCount = 0
        lastTime = tick()
    end
end)

-- Supported Games
local gamesLabel = Instance.new("TextLabel")
gamesLabel.Size = UDim2.new(0.8, 0, 0, 100)
gamesLabel.BackgroundTransparency = 1
gamesLabel.Text = "Supported Games (Auto-Script):\nâ€¢ 99 Nights in the Forest\nâ€¢ Ink Game\nâ€¢ Forsaken"
gamesLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
gamesLabel.TextScaled = true
gamesLabel.TextYAlignment = Enum.TextYAlignment.Top
gamesLabel.Font = Enum.Font.Gotham
gamesLabel.Parent = infoContent

-- Tab switching with animations (fixed initial size tweens)
local currentTab = nil

local function switchTab(tabName)
    if currentTab == tabName then return end
    currentTab = tabName
    
    -- Reset all to full size first
    for name, content in pairs(tabContents) do
        content.Size = UDim2.new(1, 0, 1, 0)
        content.Visible = false
    end
    
    -- Animate in selected
    local content = tabContents[tabName]
    content.Visible = true
    content.Size = UDim2.new(1, 0, 0, 0)  -- Start small
    local tweenIn = TweenService:Create(content, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(1, 0, 1, 0)})
    tweenIn:Play()
    
    -- Update tab buttons
    for name, btn in pairs(tabButtonsList) do
        local isActive = name == tabName
        btn.TextColor3 = isActive and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
        btn.BackgroundColor3 = isActive and Color3.fromRGB(0, 162, 255) or Color3.fromRGB(45, 45, 55)
        local extraWidth = isActive and 0.01 or 0
        TweenService:Create(btn, TweenInfo.new(0.2), {Size = UDim2.new(1 / #tabs + extraWidth, 0, 1, 0)}):Play()
    end
end

for tabName, btn in pairs(tabButtonsList) do
    btn.MouseButton1Click:Connect(function()
        switchTab(tabName)
    end)
end

-- Unlock logic (removed external loader; add your own here if needed)
unlockButton.MouseButton1Click:Connect(function()
    if passwordBox.Text == "CoolDownExperience" then
        -- Optional: Add your loadstring here, e.g.:
        -- pcall(function() loadstring(game:HttpGet("your-safe-url-here"))() end)
        addOutput("Unlocked! (External loader skipped due to errorâ€”add your own above.)", Color3.fromRGB(0, 255, 0))
        
        -- Switch to UI
        passwordFrame.Visible = false
        tabsFrame.Visible = true
        switchTab("Console")
        
        -- Sleek expand animation
        local expandTween = TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
            Size = UDim2.new(0, 500, 0, 400),
            Position = UDim2.new(0.5, -250, 0.5, -200)
        })
        expandTween:Play()
        
        -- Add initial console output
        addOutput("Console Initialized. Type Lua code to execute.", Color3.fromRGB(150, 150, 255))
    else
        -- Shake animation (fixed random position)
        local originalPos = passwordBox.Position
        for i = 1, 4 do
            TweenService:Create(passwordBox, TweenInfo.new(0.05), {Position = UDim2.new(originalPos.X.Scale, originalPos.X.Offset + (i % 2 == 0 and 10 or -10), originalPos.Y.Scale, originalPos.Y.Offset)}):Play()
            task.wait(0.05)
        end
        TweenService:Create(passwordBox, TweenInfo.new(0.05), {Position = originalPos}):Play()
        passwordBox.Text = ""
    end
end)

-- Close button (cleanup)
closeButton.MouseButton1Click:Connect(function()
    if flyConnection then flyConnection:Disconnect() end
    if noclipConnection then noclipConnection:Disconnect() end
    if infJumpConnection then infJumpConnection:Disconnect() end
    if godConnection then godConnection:Disconnect() end
    screenGui:Destroy()
end)

-- Initial entrance animation
local entranceTween = TweenService:Create(mainFrame, TweenInfo.new(0.6, Enum.EasingStyle.Back), {
    Size = UDim2.new(0, 350, 0, 280),
    Position = UDim2.new(0.5, -175, 0.5, -140)
})
entranceTween:Play()
